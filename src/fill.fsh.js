export default "precision mediump float;\n#define GLSLIFY 1\nuniform vec2 iResolution;\nuniform sampler2D iChannel0;\nuniform bool enabled;\nuniform float u_kernel[9];\nvoid main() {\n  vec2 uv = vec2(gl_FragCoord.xy / iResolution.xy);\n  uv.y = uv.y;\n  \n  vec2 fragCoord = uv ; \n  vec4 color;\n  if (enabled) {\n   vec2 onePixel = vec2(1.0, 1.0) / iResolution;\n   vec4 colorSum =\n       texture2D(iChannel0, fragCoord + onePixel * vec2(-1, -1)) * u_kernel[0] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2( 0, -1)) * u_kernel[1] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2( 1, -1)) * u_kernel[2] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2(-1,  0)) * u_kernel[3] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2( 0,  0)) * u_kernel[4] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2( 1,  0)) * u_kernel[5] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2(-1,  1)) * u_kernel[6] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2( 0,  1)) * u_kernel[7] +\n       texture2D(iChannel0, fragCoord + onePixel * vec2( 1,  1)) * u_kernel[8] ;\n   color = vec4((colorSum).rgb, 1);\n  } else {\n      color = texture2D(iChannel0, uv);\n  }\n  gl_FragColor = color;\n}";